{"version":3,"sources":["assets/img/logo.png","routers/Router.jsx","views/home/home/index.jsx"],"names":["module","exports","SubMenu","Sider","Content","Reincarnation","loadable","RouterBox","props","toggleCollapsed","setState","collapsed","state","navClickFn","res","keyPath","length","sessionStorage","setItem","JSON","stringify","openKeys","removeItem","history","push","key","onOpenChange","latestOpenKey","find","indexOf","rootSubmenuKeys","arr","async","location","pathname","map","m","getItem","parse","closeAsync","userObj","this","onRef","_this","trigger","collapsible","defaultSelectedKeys","mode","theme","onClick","Item","type","title","visible","className","path","component","React","withRouter","Header","logoUrl","require","ReactBox","routerBoxId","src","alt","window","href","username","style","marginBottom","Router","ref","onOk","onCancel","cancelText","okText"],"mappings":"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","file":"static/js/6.c236239d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.deaf77de.png\";","import * as React from 'react';\n// import './index.scss';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Switch ,withRouter,Route} from 'react-router-dom';\nimport loadable from 'loadable-components'\n\nconst SubMenu = Menu.SubMenu;\nconst { Sider, Content } = Layout;\n\nconst Reincarnation = loadable (()=>import('@/views/reincarnation'));\n\nclass RouterBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let arr = [],\n      rootSubmenuKeys = ['notepad', 'infernal', 'system'],\n      openKeys = [],\n      async = false;\n      arr[0] = props.location.pathname;\n\n\n    //判断是否是直接输入，默认不调取本地存储\n    rootSubmenuKeys.map((m) => {\n      if (props.location.pathname.indexOf(m) !== -1) {\n        async = true;\n      }\n      return async\n    });\n\n    if (async) {\n      openKeys = sessionStorage.getItem('react-menu-arr-openkeys') ? JSON.parse(sessionStorage.getItem('react-menu-arr-openkeys')) : [];\n    } else {\n      openKeys = [];\n    }\n\n    this.state = {\n      collapsed: false,\n      key: arr,\n      rootSubmenuKeys,\n      openKeys,\n      closeAsync: false,\n      userObj: sessionStorage.getItem('bx-hell-system-obj') ? JSON.parse(sessionStorage.getItem('bx-hell-system-obj')) : \"\",\n\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRef(this)\n  }\n\n  //显示隐藏 菜单栏\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n  // 点击菜单，改变url，更改页面\n  navClickFn = (res) => {\n    if (res.keyPath.length > 1) {\n      sessionStorage.setItem('react-menu-arr-openkeys', JSON.stringify(this.state.openKeys));\n    } else {\n      sessionStorage.removeItem('react-menu-arr-openkeys');\n    }\n\n    this.props.history.push(res.key);\n  }\n\n\n\n  //默认打开submenu  key 数组\n  onOpenChange = (openKeys) => {\n    const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\n\n    if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      this.setState({ openKeys });\n    } else {\n      this.setState({\n        openKeys: latestOpenKey ? [latestOpenKey] : [],\n      });\n    }\n\n  }\n\n  render() {\n    let _this = this.state;\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={_this.collapsed}\n        >\n          <Menu\n            defaultSelectedKeys={_this.key}\n            openKeys={_this.openKeys}\n            mode=\"inline\"\n            theme=\"dark\"\n            onClick={(res) => {\n              this.navClickFn(res)\n            }}\n            onOpenChange={(res) => {\n              this.onOpenChange(res)\n            }}\n          >\n            <Menu.Item key=\"/\">\n              <Icon type=\"file\" />\n              <span>首页</span>\n            </Menu.Item>\n            <SubMenu\n              key=\"notepad\"\n              title={\n                <span><Icon type=\"bars\" /><span>生死薄</span></span>\n              }\n              visible={true}\n            >\n              <Menu.Item key=\"/notepad/userList\">\n                <Icon type=\"file\" />\n                <span>用户管理</span>\n              </Menu.Item>\n              <Menu.Item key=\"/notepad/dataList\">\n                <Icon type=\"file\" />\n                <span>数据同步</span>\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"/hookList\">\n              <Icon type=\"file\" />\n              <span>勾魂管理</span>\n            </Menu.Item>\n            <Menu.Item key=\"/trialList\">\n              <Icon type=\"file\" />\n              <span>阎王殿审判记录</span>\n            </Menu.Item>\n            <SubMenu key=\"infernal\" title={<span><Icon type=\"bars\" /><span>十八层地狱</span></span>} visible={true}>\n              <Menu.Item key=\"/infernal/equipment\">\n                <Icon type=\"file\" />\n                <span>设备管理</span>\n              </Menu.Item>\n              <Menu.Item key=\"/infernal/task\">\n                <Icon type=\"file\" />\n                <span>作业流程</span>\n              </Menu.Item>\n              <Menu.Item key=\"/react/tube\">\n                <Icon type=\"file\" />\n                <span>用户管理</span>\n              </Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"/reincarnation\">\n              <Icon type=\"file\" />\n              <span>六道轮回</span>\n            </Menu.Item>\n            <Menu.Item key=\"/money\">\n              <Icon type=\"file\" />\n              <span>冥币管理</span>\n            </Menu.Item>\n            <Menu.Item key=\"/journal\">\n              <Icon type=\"file\" />\n              <span>日志管理</span>\n            </Menu.Item>\n            <SubMenu key=\"system\" title={<span><Icon type=\"bars\" /><span>系统管理</span></span>} visible={true}>\n              <Menu.Item key=\"/system/user\">\n                <Icon type=\"file\" />\n                <span>管理员</span>\n              </Menu.Item>\n              <Menu.Item key=\"/system/role\">\n                <Icon type=\"file\" />\n                <span>角色权限</span>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Content className=\"react-content-wrap\">\n          <Switch>\n            {/* 首页 */}\n            {/* <Route\n                  exact\n                  path=\"/react\"\n                  component={\n                    AsyncLoader (() => import('$view/react/home') )\n                  }\n                /> */}\n            {/* jsx */}\n            <Route path=\"/reincarnation\" component={Reincarnation}/>\n            {/* 正常路由 */}\n            {/* <Route\n                  exact\n                  path=\"/react/router/normal\"\n                  component={\n                    AsyncLoader (() => import('$view/react/router/normal') )\n                  }\n                /> */}\n            {/* 嵌套路由 */}\n            {/* <Route\n                  exact\n                  path=\"/react/router/nesting\"\n                  component={\n                    AsyncLoader (() => import('$view/react/router/nesting') )\n                  }\n                />   */}\n            {/* 数组渲染 */}\n            {/* <Route\n                  exact\n                  path=\"/react/loop/arr\"\n                  component={\n                    AsyncLoader (() => import('$view/react/loop/arr') )\n                  }\n                />   */}\n            {/* 判断渲染 */}\n            {/* <Route\n                  exact\n                  path=\"/react/loop/condition\"\n                  component={\n                    AsyncLoader (() => import('$view/react/loop/condition') )\n                  }\n                />   */}\n            {/* 前后分离 */}\n            {/* <Route\n                  exact\n                  path=\"/react/around/separate\"\n                  component={\n                    AsyncLoader (() => import('$view/react/around/around') )\n                  }\n                />   */}\n            {/* axios，fetch */}\n            {/* <Route\n                  exact\n                  path=\"/react/around/axios\"\n                  component={\n                    AsyncLoader (() => import('$view/react/around/axios') )\n                  }\n                />   */}\n            {/* ajax请求接口 */}\n            {/* <Route\n                  exact\n                  path=\"/react/around/ajax\"\n                  component={\n                    AsyncLoader (() => import('$view/react/around/ajax') )\n                  }\n                />  */}\n            {/* vue请求接口 */}\n            {/* <Route\n                  exact\n                  path=\"/react/around/vue\"\n                  component={\n                    AsyncLoader (() => import('$view/react/around/vue') )\n                  }\n                />  */}\n            {/* 错误路由 404  */}\n\n            {/* <Redirect  to={{pathname: '/404'}} /> */}\n          </Switch>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(RouterBox);\n","import * as React from 'react';\nimport './index.scss';\nimport { Layout , Icon, Button ,Modal} from 'antd';\nimport {withRouter} from 'react-router-dom';\nimport RouterBox from '@/routers/Router';\n\n\n\nconst { Header } = Layout;\n\nconst logoUrl = require('$imgs/logo.png');\n\nclass ReactBox extends React.Component{\n  constructor(props) {\n    super(props);\n    this.routerBoxId = React.createRef();\n    this.state = {\n      collapsed: false,\n      closeAsync : false,\n      userObj : sessionStorage.getItem('bx-hell-system-obj') ? JSON.parse(sessionStorage.getItem('bx-hell-system-obj')):\"\",\n\n    };\n  }\n\n  //显示隐藏 菜单栏\n  toggleCollapsed = () => {\n    this.routerBoxId.toggleCollapsed();\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n \n\n  \n\n  render() {\n    let _this = this.state;\n    return (\n      <div className=\"react-wrap\" >\n        <Layout className=\"antd-wrap\">\n          <Header className=\"header-wrap g-text-ove1\">\n            <section className=\"left-box\">\n              <img src={logoUrl} alt=\"\" onClick={()=>{\n                this.props.history.push('/');\n              }}/>\n              <span onClick={()=>{\n                window.location.href = 'http://10.15.198.18:8090/pages/viewpage.action?pageId=3932983'\n              }} >地府管理系统</span>\n            </section>\n            <section className=\"rig-box\"> \n              <h4 onClick={()=>{\n                if(_this.userObj){\n                  this.setState({closeAsync:true})\n                } else{\n                  this.props.history.push('/login')\n                }\n\n               \n              }}>{_this.userObj ? `${_this.userObj.username},点击退出` : '点击登录！送VIP' }</h4>\n              <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\n                <Icon type={_this.collapsed ? 'menu-unfold' : 'menu-fold'} />\n              </Button>\n            </section>\n          </Header>\n          <RouterBox  onRef={(ref)=>{ this.routerBoxId = ref}}/>\n          {/* 退出 */}\n          <Modal\n            title=\"退出登录！！！\"\n            visible={_this.closeAsync}\n            onOk={()=>{\n              sessionStorage.removeItem('bx-hell-system-obj');\n              this.props.history.push('/login')\n            }}\n            onCancel={()=>{\n              this.setState({closeAsync:false})\n            }}\n            cancelText = \"浪子回头仍不晚\"\n            okText     = \"哥的任性你不懂\"\n          >\n            <p>您确定退出吗？这将使您无法访问VIP权限的项目</p>\n          </Modal>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReactBox);\n"],"sourceRoot":""}